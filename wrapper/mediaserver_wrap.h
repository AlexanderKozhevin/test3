/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: mediaserver.i

#ifndef SWIG_native_WRAP_H_
#define SWIG_native_WRAP_H_

class Swig_memory;

class SwigDirector_SenderSideEstimatorListener : public SenderSideEstimatorListener
{
 public:
  SwigDirector_SenderSideEstimatorListener(int swig_p);
  virtual ~SwigDirector_SenderSideEstimatorListener();
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_MediaFrameListener : public MediaFrameListener
{
 public:
  SwigDirector_MediaFrameListener(int swig_p);
  virtual ~SwigDirector_MediaFrameListener();
  void _swig_upcall_onMediaFrame(MediaFrame &frame) {
    MediaFrameListener::onMediaFrame(frame);
  }
  virtual void onMediaFrame(MediaFrame &frame);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_PlayerEndListener : public PlayerEndListener
{
 public:
  SwigDirector_PlayerEndListener(int swig_p);
  virtual ~SwigDirector_PlayerEndListener();
  void _swig_upcall_onEnd() {
    PlayerEndListener::onEnd();
  }
  virtual void onEnd();
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_REMBBitrateListener : public REMBBitrateListener
{
 public:
  SwigDirector_REMBBitrateListener(int swig_p);
  virtual ~SwigDirector_REMBBitrateListener();
  void _swig_upcall_onREMB() {
    REMBBitrateListener::onREMB();
  }
  virtual void onREMB();
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
